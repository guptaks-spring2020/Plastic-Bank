/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.ui.ApplicationFrame;
import static userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel.plasticCount;

/**
 *
 * @author nikitalalwani
 */
public class JChartClass extends ApplicationFrame {
    /**
     * Creates new form JChartClass
     * @throws java.io.IOException
     */
//       public JChartClass(){
//          
//    }
    public static String titleStr;
    public static Map<String, Integer> dataList;
    public JChartClass(final String title, Map<String, Integer> mapObj) throws IOException{
      super( title ); 
      titleStr = title;
      dataList = mapObj;
      
       JFreeChart barChart = ChartFactory.createBarChart(
         title,           
         "CITY",            
         "PLASTIC COUNT",            
         createDataset(),          
         PlotOrientation.VERTICAL,           
         true, true, false);
         
      ChartPanel chartPanel = new ChartPanel( barChart );        
      chartPanel.setPreferredSize(new java.awt.Dimension( 560 , 367 ) );        
      setContentPane( chartPanel ); 

    }

     private static CategoryDataset createDataset() {    
         
final DefaultCategoryDataset result = 
      new DefaultCategoryDataset( );
for (Entry<String, Integer> entry : dataList.entrySet()) {
        result.addValue(entry.getValue(), entry.getKey(), "");
    }
    return result;
   }
   
   private static JFreeChart createChart( ) {
    JFreeChart barChart = ChartFactory.createBarChart(
         "",           
         "CITY",            
         titleStr,            
         createDataset(),          
         PlotOrientation.VERTICAL,           
         true, true, false);

      return barChart;
   }
   
   public static JPanel createDemoPanel( ) {
      ChartPanel chartPanel = new ChartPanel(createChart());        
      chartPanel.setPreferredSize(new java.awt.Dimension( 560 , 367 ) ); 
      return chartPanel;
   }

   public static void main( String[ ] args ) {
//      PieChart_AWT demo = new PieChart_AWT( "Mobile Sales" );  
//      demo.setSize( 560 , 367 );    
//      RefineryUtilities.centerFrameOnScreen( demo );    
//      demo.setVisible( true ); 
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
